---
- name: Install Xorg base
  pacman: name={{ item }} state=present
  with_items:
    - xorg-server
    - xorg-xinit
    - xorg-xrdb

- name: Install optional xorg tools
  pacman: name={{ item }} state=present
  with_items:
    - xorg-xprop
    - xorg-xmodmap
    - xorg-xrandr
    - xorg-xev
    - xorg-xset
    - xorg-xinput
    - xorg-xlsclients
    - xorg-xdpyinfo
    - xorg-xwininfo
  when: not minimal

- name: Caps -> Ctrl in Xorg
  copy: src=files/xorg-no-caps dest=/etc/X11/xorg.conf.d/00-keyboard.conf mode=644

- name: Blacklist nouveau Xorg driver
  kernel_blacklist: name=nouveau state=present
  when: model == "Vostro 3700"

- name: Set up Xorg for Vostro 3700
  pacman: name={{ item }} state=present
  with_items:
    - xf86-input-synaptics
  when: model == "Vostro 3700"

- name: Set up Xorg for ThinkPad
  pacman: name={{ item }} state=present
  with_items:
    - xf86-input-synaptics
    - libva-intel-driver
  when: model in ["T460s", "T470s", "X1 Carbon"]

- name: Set up Xorg for nvidia laptops
  pacman: name={{ item }} state=present
  with_items:
    - xf86-video-nouveau
    - xf86-input-synaptics
  when: model in ["XPS 8500", "W530"]

# Workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1509294 / https://bbs.archlinux.org/viewtopic.php?id=233159
#
# [Wed Feb 14 07:54:52 2018] nouveau 0000:01:00.0: fifo: write fault at 0000068000 engine 07 [HOST0] client 07 [HOST_CPU] reason 02 [PTE] on channel 2 [007f9ab000 systemd-logind[441]]
# [Wed Feb 14 07:54:52 2018] nouveau 0000:01:00.0: fifo: channel 2: killed
# [Wed Feb 14 07:54:52 2018] nouveau 0000:01:00.0: fifo: runlist 0: scheduled for recovery

- name: Add workaround for PTE write fault
  copy: src=files/nouveau-pte-write-fault.conf dest=/etc/modprobe.d/nouveau-pte-write-fault.conf
  when: model in ["W530"]

- name: Remove intel video for those formerly using only integrated
  pacman: name={{ item }} state=absent recurse=yes
  with_items:
    - xf86-video-intel
    - libva-intel-driver
  when: model in ["W530"]

- name: Set up Xorg for Parallels
  pacman: name=xf86-video-vesa state=present
  when: model == "Parallels"

- name: Install VirtualBox guest utilities
  # Needs to be from the AUR as there's no guarantee that the headers will come
  # from pacman repos
  aur: name={{ item }} state=present auronly=no
  with_items:
    - virtualbox-guest-utils
    - "{{ kernel }}-headers"  # needed for virtualbox-guest-dkms which is
  become: yes
  become_user: makepkg
                              # pulled in by virtualbox-guest-utils
  when: model == "VirtualBox"

- name: Set up autoloading of VirtualBox modules
  copy: src=files/virtualbox/guest-modules dest=/etc/modules-load.d/virtualbox-guest.conf
  when: model == "VirtualBox"

- name: Configure vboxservice
  service: name=vboxservice state=started enabled=yes
  when: model == "VirtualBox"

- name: Install depmod-all
  copy: src=files/bin/depmod-all dest=/usr/local/bin/depmod-all mode=0755

- name: Depmod
  command: depmod-all
  changed_when: false
